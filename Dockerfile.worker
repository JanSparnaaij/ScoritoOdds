FROM python:3.10-slim

# Set the working directory
WORKDIR /app

# Install system dependencies including Playwright requirements
RUN apt-get update && apt-get install -y \
    build-essential \
    wget \
    # Playwright dependencies
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python packages
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Set up Playwright with system-wide installation
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
RUN pip install playwright && \
    mkdir -p /ms-playwright && \
    playwright install chromium && \
    playwright install-deps chromium && \
    chmod -R 777 /ms-playwright && \
    # Verify installation
    ls -la /ms-playwright && \
    find /ms-playwright -name chrome

# Copy the rest of the application
COPY . .

# Make the entrypoint script executable
RUN chmod +x docker-entrypoint.sh

# Create non-root user for Celery
RUN useradd -m celeryuser && \
    chown -R celeryuser:celeryuser /app /ms-playwright && \
    # Give celeryuser access to necessary directories
    chmod -R 755 /app && \
    chmod -R 777 /ms-playwright

# Switch to non-root user
USER celeryuser

# Remove the browser check from entrypoint since we've already installed it
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1

# Create directories for debugging
RUN mkdir -p /app/debug && \
    chmod 777 /app/debug

ENTRYPOINT ["./docker-entrypoint.sh"]
CMD ["worker"]
